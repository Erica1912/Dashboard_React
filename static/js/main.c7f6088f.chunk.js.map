{"version":3,"sources":["adapters/ResponseAdapter.jsx","hooks/FetcHook.jsx","components/StatusBar.jsx","img/coordinadora-principal.png","components/Header.jsx","components/Overall.jsx","views/HomeView.jsx","App.js","reportWebVitals.js","index.js"],"names":["ResponseAdapter","response","status","apis","map","api","Object","values","days","title","current_status","average","Math","round","reduce","a","b","length","overall","_","array","average30d","average24h","slice","arra7d","max","average7d","useFetch","React","useState","setResponse","error","setError","isLoading","setIsLoading","useEffect","fetchData","fetch","res","json","FactoryAll","interval","setInterval","clearInterval","StatusBar","props","className","day","i","Header","date","Date","src","Principal","alt","getHours","getMinutes","getSeconds","Overall","HomeView","toString","App","basename","process","component","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f6088f.chunk.js","sourcesContent":["class ResponseAdapter {\n  static FactoryAll(response) {\n    response.status.apis = response.status.apis.map((api) => {\n      const [{ days, title, current_status }] = Object.values(api);\n      const average = Math.round(days.reduce((a, b) => a + b) / days.length);\n\n      return { days, title, current_status, average };\n    });\n\n    response.status.overall = response.status.apis.reduce(\n      (overall, api, _, array) => {\n        overall.average30d += api.average / array.length;\n        overall.average24h += api.days.slice(-1)[0] / array.length;\n        const arra7d = api.days.slice(Math.max(api.days.length - 7, 1));\n        overall.average7d += arra7d.reduce((a, b) => a + b) / 7 / array.length;\n        return overall;\n      },\n      {\n        average24h: 0,\n        average7d: 0,\n        average30d: 0,\n      }\n    );\n    return response;\n  }\n}\n\nexport default ResponseAdapter;\n","import React from \"react\";\nimport ResponseAdapter from '../adapters/ResponseAdapter'\n\n/**\n * Custom hook for fetching data\n * @param {string} url - Url to fetch\n * @param {options} [options={}] - Fetch options *\n * @returns {{response, error, loading}} - State data *\n * @example\n\n */\nconst useFetch = () => {\n  const [response, setResponse] = React.useState(null);\n\n  const [error, setError] = React.useState(null);\n\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(\n          `http://us-central1-cm-devops-294019.cloudfunctions.net/status`\n        );\n        const json = await res.json();\n        setResponse(ResponseAdapter.FactoryAll(json));\n        setError(null);\n        setIsLoading(false);\n      } catch (error) {\n        setResponse(null);\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    const interval = setInterval(fetchData, 120*1000);\n    fetchData();\n    return () => clearInterval(interval);\n    //timeinterval\n  }, []);\n\n  return { response, error, isLoading };\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport \"../asset/StatusBar.css\";\n\n/**\n * StatusBar component\n * \n * @author Erica Ruiz <eri.ruiz@hotmail.com> \n * \n * @param {React.ComponentProps} props of the StatusBar\n * @returns {JSX.Element} StatusBar\n */\nconst StatusBar = (props) => {\n  const { days, title, current_status, average } = props.values;\n\n  return (\n    <div className=\"principal-statusbar\">\n      <div className=\"info\">\n        <div className=\"titulos_status\">\n          <div className=\"texto-info\">{title}</div>\n          <div className=\"status\">{current_status}</div>\n        </div>\n        <div className=\"principal-bar\">\n          {days.map((day,i) => {\n            if (day <= 60) {\n              return <div className=\"menor\" key={i} title={day}></div>;\n            }\n            if (day < 80) {\n              return <div className=\"entre\" key={i} title={day}></div>;\n            }            \n            return <div className=\"mayor\" key={i} title={day}></div>;           \n          })}\n        </div>\n        <div className=\"principal-porcentaje\">\n          <div className=\"porcentaje\">{average} %</div>\n          <div className=\"dia\">Today</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/*\n\n \n\n*/\n\nexport default StatusBar;\n","export default __webpack_public_path__ + \"static/media/coordinadora-principal.a0953254.png\";","import React from \"react\";\nimport Principal from \"../img/coordinadora-principal.png\";\nimport \"../asset/Header.css\";\n\n/**\n * Header component\n *\n * @author Erica Ruiz <eri.ruiz@hotmail.com>\n *\n * @returns {JSX.Element} Header\n */\nconst Header = () => {\n  const date = new Date();\n  \n  return (\n    <div className=\"inicio\">\n      <img src={Principal} alt=\"Principal\" className=\"imagen-principal\" />\n      <div className=\"principal\">\n        <div className=\"texto-principal\">All systems operational {\"     \"}</div>\n        <div className=\"texto\">\n          Refreshes {\"  \"} {date.getHours()} : {\"  \"} {date.getMinutes()} : {\"  \"}{\" \"}\n          {date.getSeconds()} UTC-0400\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../asset/Overall.css\";\n\n/**\n * Overall component\n * \n * @author Erica Ruiz <eri.ruiz@hotmail.com> \n * \n * @param {React.ComponentProps} props of the Overall\n * @returns {JSX.Element} Overall\n */\nconst Overall = (props) => {\n  const {  average24h, average7d, average30d } = props.values;\n  \n  return (<div>\n      <div>{Math.round( average24h)} %</div>\n      <div>{Math.round(average7d)} %</div>\n      <div>{Math.round(average30d)} %</div>\n  </div>);\n};\n\nexport default Overall;\n","import React from \"react\";\nimport useFetch from \"../hooks/FetcHook\";\nimport StatusBar from \"../components/StatusBar\";\nimport Header from \"../components/Header\";\nimport \"../asset/HomeView.css\";\nimport Overall from \"../components/Overall\";\n\nconst HomeView = () => {\n  const { response, error, isLoading } = useFetch();\n\n  if (isLoading) {\n    return <h1>Cargando sitio...</h1>;\n  }\n  if (error) {\n    return <h1>{error.toString()}</h1>;\n  }\n  const { apis, overall } = response.status;\n  \n  return (\n    <div className=\"principalView\">\n      <Header />\n      {apis.map((api) => (\n        <StatusBar values={api} key={api.title} />\n      ))}\n      <Overall values={overall} />\n    </div>\n  );\n};\n\nexport default HomeView;\n","\nimport \"./App.css\";\nimport HomeView from \"./views/HomeView\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    \n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route component={HomeView} exact path=\"/\"></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}